AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  githubpassword:
    Type: String
Resources:
  ArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codepipeline.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 's3:*'
                - 'cloudformation:CreateStack'
                - 'cloudformation:DescribeStacks'
                - 'cloudformation:DeleteStack'
                - 'cloudformation:UpdateStack'
                - 'cloudformation:CreateChangeSet'
                - 'cloudformation:ExecuteChangeSet'
                - 'cloudformation:DeleteChangeSet'
                - 'cloudformation:DescribeChangeSet'
                - 'cloudformation:SetStackPolicy'
                - 'iam:PassRole'
                - 'sns:Publish'
                - 'codebuild:*'
                Effect: Allow
                Resource: '*'
  CFNRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [cloudformation.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CloudFormationRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 'ec2:*'
                  - 'IAM:PassRole'
                Effect: Allow
                Resource: '*'          
  CodeBuildRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName:
        Fn::Sub: CodeBuildRole-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        -
          PolicyName: "CodeBuildNestedCFNAccessPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - "cloudformation:Get*"
                  - "cloudformation:Describe*"
                  - "cloudformation:List*"
                Resource:
                  - Fn::Sub: arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/Wordpress-${AWS::StackName}*
              -
                Effect: "Allow"
                Action:
                  - "codecommit:ListBranches"
                  - "codecommit:ListRepositories"
                  - "codecommit:BatchGetRepositories"
                  - "codecommit:Get*"
                  - "codecommit:GitPull"
                Resource:
                  - Fn::Sub: arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:wordpress-build-test
              -
                Effect: "Allow"
                Action:
                  - "ec2:Describe*"
                  - "ec2:AuthorizeSecurityGroupIngress"
                  - "cloudformation:ValidateTemplate"
                  - "elasticloadbalancing:Describe*"
                  - "autoscaling:Describe*"
                  - "iam:Get*"
                  - "iam:List*"
                  - "logs:Describe*"
                  - "logs:Get*"
                  - "route53:ListResourceRecordSets"
                  - "tag:Get*"
                Resource:
                  - "*"
              -
                Effect: "Allow"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*
              -
                Effect: "Allow"
                Action:
                  - "s3:PutObject"
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:ListBucket"
                Resource:
                  - Fn::Sub: arn:aws:s3:::codepipeline-${AWS::Region}-*
                  - Fn::Sub: arn:aws:s3:::${ArtifactStoreBucket}/*
                  - Fn::Sub: arn:aws:s3:::${ArtifactStoreBucket}/*
  M4CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: M4
      Description: Run Grails inside a container
      ServiceRole:
        Fn::GetAtt: [ CodeBuildRole, Arn ]
      Artifacts:
        Type: S3
        Location: !Ref 'ArtifactStoreBucket'
        Name: M4DailyArtifact
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: craigwongva/grails240:grails240
      Source:
        Location: https://github.com/craigwongva/microqoder
        BuildSpec: craigspec.yml
        Type: GITHUB
        Auth: 
          Type: OAUTH
      TimeoutInMinutes: 5
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref 'ArtifactStoreBucket'
        Type: S3
      DisableInboundStageTransitions: []
      Name: simple-pipeline
      RoleArn: !GetAtt [PipelineRole, Arn]
      Stages:
        - Name: Sourcing
          Actions:
            - Name: GetCraigspec
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Owner: craigwongva
                Repo: microqoder
                PollForSourceChanges: true
                Branch: master
                OAuthToken: !Ref githubpassword
              OutputArtifacts:
                - Name: CraigspecArtifact 
              RunOrder: 2              
        - Name: StacksValidation
          Actions:
            - Name: ValidateStacks
              InputArtifacts:
                - Name: CraigspecArtifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: M4
              OutputArtifacts:                
                - Name: BagArtifact                 
              RunOrder: 5
        - Name: DeployMe
          Actions:
            - Name: DeployBaguette
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'            
              InputArtifacts:
                - Name: CraigspecArtifact
                - Name: BagArtifact
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !GetAtt [CFNRole, Arn]
                StackName: Baguette
                TemplatePath: CraigspecArtifact::cf-ec2-get-artifact.yml
                TemplateConfiguration: CraigspecArtifact::cf-ec2-get-artifact-parms.json              
Outputs:
  artifactStoreBucketOutput:
    Value: !Ref ArtifactStoreBucket
    Export:
      Name: wordpress-build-test-artifact-store-bucket
